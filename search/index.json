[{"content":"main margin 90px auto padding 15px max-width 70% note much of below information is summarized from course trace labs osint foundations credit goes chris poulter\u0026rsquos expertise check out their website partners sources open source intelligence way searching for on only publicly available while this may seem be same everyone searches there are many tools methodologies that can used enhance your research capabilities post will dive into few basic ways which you improve current skills expose new resources get started path table contents advanced google dorks date ranges icon adding limiting displayed results cache anonymity event people search engines username correlation finding usernames account gathering reverse image text translation cross-platform social media network analysis scraping visualization dork query or just using google\u0026rsquos features allowing add parameters specify first narrow down by here all different types queries along examples how use them don\u0026rsquot forget have multiple even better boolean operators last six entries often other applications range has feature called allows recent want additionally custom option however if we more control then follow syntax ex related published after august 16th 2021 before combine two together would find between june 1st 2020 january times certain accompanied icons actually us it\u0026rsquos as simple copy pasting bar good place look common make our previous say wanted contact lawyers york info normally limits number shown per page ten some situations it convenient less do go end url where integer example append my like another take directly cached version whatever enter means instead making connection actual servers accessing stored snapshot something see header shows domain name time three modes full selected default meaning attempt recreate well including requesting any images website\u0026rsquos server remain entirely anonymous access text-only load code never doing following select vertical dots right pop up should appear at bottom pop-up click button link address paste copied press result does very job organizing instances events helpful because having organizer efficiently so visit engine compiles readable format provides accuracy score broader internet drawbacks certainty level low algorithm not requires manual effort validate false positives presents detail u.s focused but extend global preview sites lowers attribution levels since you\u0026rsquore visiting lots links scam websites uses whitepages data phone lookup options age state filtering constantly wants buy premium still effectively based ip metric limited day signed person built business professionals searched paid platform free get-arounds australian dataset australia vpn process taking accounts across platforms ensure validation continual verify specific strategies sure cross eliminate green site red taken prone goal getting efficiency key top colors also show front applicable special each user existing formats facebook.com twitter.com instagram.com youtube.com tiktok.com @username linkedin.com user-name linkedin sometimes adds random characters require separately once you\u0026rsquove found observe extra emphasis catagories users increase additional about section content reused personal posting patterns frequency type original posts vs reposts length sincerity friends commonly interact pn followers photos nicknames especially ones alternative pros cons particularly locations structures broken size located visually similar pages include russian bing leader identifying individuals matching parts picture efficient best owned company focuses exact matches copyright tool created above one easy resource such partial able transcribe translate frequent errors against works local file must downloaded put translator sna critical broad associates understanding usage clusters groups verifying associated metadata visualized sociograms tell stories assist individual understand terminology relationships relationship \u0026mdash directed symmetric hard manage observations gathered web utilized collect allow customization editing need sign these fake when facebook scrape list twitter instagram users' online scraped placed csv model rapid within browser smaller datasets large scale software installation","date":"2021-10-23","description":null,"permalink":"https://s0merset7.github.io/posts/osint/introtoosint/","tags":["OSINT"],"title":"Introduction to Open Source Intelligence (OSINT)"},{"content":"main margin 90px auto padding 15px max-width 70% note most of below information is summarized from dr yan shoshitaishvili’s “binary reverse engineering” module much credit goes yan’s expertise please check out pwn.college resources challenges sources functions frames control flow graphs way visually representing function graph word used describe entire map block set on instructions that will execute one after other edges represent conditional unconditional jumps blue jump always be taken green condition met true red not false prologue sets up stack frame save off caller\u0026rsquos base pointer current as allocate space subtract epilogue tears down deallocate data destroyed by default restore old reserved place memory for operate rsp points leftmost side rbp rightmost what region store local variables when you decreased increased starts storing environment program arguments among things access locations .data pre-initialized global writable such arrays initial values .rodata read-only string constants .bss uninitialized without statically-allocated heap dynamically-allocated malloced static tools engineer at rest simple file format parser explorer nm lists symbols provided elf files strings dumps ascii found objdump disassembler advanced disassemblers commercial gold standard ida\u0026rsquos competitor free version binary ninja runs your browser open source academic analysis framework dynamic runtime ltrace traces library calls strace system gdb walk through it running has its own scripting language here\u0026rsquos example disp 5i $rip break *0x401025 commands $rsp end this display first five code then right instruction located executed finally stored register","date":"2021-09-19","description":null,"permalink":"https://s0merset7.github.io/posts/reverse_engineering/reverseengineering/","tags":["pwn.college"],"title":"Reverse Engineering (Module 6)"},{"content":"main margin 90px auto padding 15px max-width 70% note most of below information is summarized from dr yan shoshitaishvili’s “sandboxing” module much credit goes yan’s expertise please check out pwn.college resources challenges sources what sandboxing idea behind untrusted data code should live process almost zero permissions spawn privileged parent sandboxed child processes when needs perform action it asks chroot change-root used be de-facto utility changes meaning for its children will disallow getting jail no syscall filtering or other isolation does not close that reside outside into do anything else pitfalls previously-open linux has functions take as argument can file descriptor representing any opened directory special value at_fdcwd kernel momemory previous if you then first one overwritten isolated pid networks ipc seccomp essentially system call firewall allows developers allow filter permitted calls rules are inherited by restrict operations run root how work uses functionality extended berkeley packet filters ebpf ebpfs programs in-kernel probably-safe virtual machine breaking generally need communicate this means normally some allowing permissive policies confusion vulnerabilities handlers caused combination there lot complexity easy miss something may avoid erring on side permissiveness common syscalls abuse let puppet non-sandboxed transfer between bizarre possible effects direct access process' memory many 64-bit architectures backwards compatible their 32-bit ancestors systems switching mode same must ready either numbers differ including vs these polices often fail properly sandbox example 60 amd64 but x86","date":"2021-09-12","description":null,"permalink":"https://s0merset7.github.io/posts/sandboxing_post/sandboxingpost/","tags":["pwn.college"],"title":"Sandboxing (Module 5)"},{"content":"main margin 90px auto padding 15px max-width 70% note most of below information is summarized from dr yan shoshitaishvili’s “shellcode injection” module much credit goes yan’s expertise please check out pwn.college resources challenges sources this relies heavily on preexisting x86 knowledge so if you don\u0026rsquot have experience then i\u0026rsquod recommend taking look at learning some basics or rest post won\u0026rsquot make sense would highly also watching lecture videos as are able see actual examples what explained here shellcode computer architectures treat code data interchangeably allowing us manipulate we can use abuse traditional goal launch shell want achieve arbitrary command execution not always read file permissions for add into write need format .global _start .intel_syntax noprefix your will set up global symbol indicate start allows execute our normal elf where that using intel instead at\u0026ampt assemble it standard libraries since calling them directly systemcalls only loading dependant upon anything else output compiled called shellcode-elf previous create program get do there section contains by running dumping new call debuging after compiling instructions above debug display everything being executed which often assist finding any unwanted activity gdb linux walk through runs caveats no source navigate print next examine qwords dwords halfwords bytes step one instruction follow over break address label work expected hardcode breakpoints implemented place anywhere yourself especially useful catch beginning common sometimes be allowed certain result how processes like around these restrictions creative remember interchangeable computers point view other commands when doing sure writeable","date":"2021-09-06","description":null,"permalink":"https://s0merset7.github.io/posts/shellcoding_post/shellcodingpost/","tags":["pwn.college"],"title":"Shellcoding (Module 4)"},{"content":"main margin 90px auto padding 15px max-width 70% note most of below information is summarized from dr yan shoshitaishvili’s “assembly refresher” module much credit goes yan’s expertise please check out pwn.college resources challenges sources this relies heavily on preexisting x86 knowledge so if you don\u0026rsquot have experience then i\u0026rsquod recommend starting learning some basics or rest post won\u0026rsquot make sense table contents registers instructions memory very fast temporary storage for data address next instruction stored register eip general purpose eax ecx edx ebx esp ebp esi edi partial access full 64 bits long however they can be accessed partially show layout different followed by image explaining rax warning accessing will zero all other preserve untouched parts tell cpu what do take several forms generally include opcode operands it flow right left whats move into control determined conditional unconditional jumps call jmp ret conditionals key off flags eflags updated arithmetic operations cmp subtraction test system calls stop process request os perform task once completed resume triggered setting number storing arguments rdi rsi etc calling well-defined interfaces that rarely change maintained list over 300 linux are memorystack fulfils four issues track callstack program return values pushed stack during popped contain local variables functions provide scratch space alleviate exhaustion pass function always only many architectures","date":"2021-09-03","description":null,"permalink":"https://s0merset7.github.io/posts/assembly_refresher/assemblyrefresher/","tags":["pwn.college"],"title":"Assembly Refresher (Module 3)"},{"content":"main margin 90px auto padding 15px max-width 70% note most of below information is summarized from dr yan shoshitaishvili\u0026rsquos “program misuse” module much credit goes yan\u0026rsquos expertise please check out pwn.college resources challenges sources there wasn\u0026rsquot as content cover so this post isn\u0026rsquot too long i\u0026rsquod still reccomend checking lectures yourself for demonstrations on each topics covered priviledge escalation every process has user id uid group gid linux admin root needed installing software loading device drivers shutting down rebooting changing system-wide settings can be used open any file execute program assume other debug permission model suidset euideffective owner rather than parent reset time file\u0026rsquos ownership changed sgidset egideffective sticky shared directories limit removal owners ensures you only delete files have created directory effective ideuid egid access checks read iduid gidthe real things such signal saved that your could switch its euid temporarily dropping privileges useful commands will list ids system add suid given priviledges are not dropped when running","date":"2021-09-02","description":null,"permalink":"https://s0merset7.github.io/posts/program_misuse/programmisuse/","tags":["pwn.college"],"title":"Program Misuse (Module 2)"},{"content":"main margin 90px auto padding 15px max-width 70% as part of my degree program have take class called cse466 computer systems security professor for this created table contents linux command line file system environment variables types files pipes useful commands binary elf headers section symbols resources interaction lifecycle process what is timeline absolute paths start relative do not current working directory set key value pairs passed into every when launched critical include list directories search programs path home name symbolic links soft special type that references another are containing link hard perfect reference data content inside linked they only its original different regular yes actually just transparently points or named pipe also known fifo character device i.e. backed by hardware produces receives streams such microphone block stores loads blocks drive unix socket essentially local network connection encapsulated unnamed ethereal channels communication often used direct from one fifos help facilitate flow certain situations first out cli will return given found variable prints all screen can new existing creates lists along files' makes redirect in_file command\u0026rsquos input output out_file overwriting it appending errors error_file executable linkable format defines be loaded executed memory bsd allows compiler create define how should segment metadata describing components windows equivalent portable executables pe macos mach-o dynamically relies on libraries need specify information segments needed prepare execution source loading parts important entry defining library load represent view lot more semantic less actual required stored sections code your resolve dispatch calls pre-initialized global writable arrays initial values read-only string constants uninitialized without binaries use find function those etc interact make parse header disassemble elf\u0026rsquos change some properties swap remove otherwise-helpful look through interactively providing associated dynamic imports at runtime has state running waiting stopped zombie priority other scheduling parent siblings children shared sockets virtual space context effective uid gid saved capabilities dedicated specific physical among whole libc full helper functions almost including common kernel check permissions begin figures steps taken starts beginning looks sh-bang extract rest interpreter see if matches instead run argument there no script then match execute dynamically-linked read loader collectively defined control locates anything ld.so.preload shell specified both modified patchelf ld.so.conf system-wide configuration lib usr runs may cause depend update relocations during static own located proc self maps heap allocated stack any specifically mapped regions upper half inaccessible above 0x8000000000000000 64-bit architectures initialized constructors automatically which program\u0026rsquos now reads arguments three objects command-line argv executes operating systemos os communicate signals pause invoke handler signal number default action kill method outside sharing processes requires call but sustaining way memory-mapped dev shm terminates two ways terminate receive unhandled calling after termination must reaped remain up until their process\u0026rsquos exit freed does happen re-parented pid cleaned viewing being forcibly provided necessary trace terminated show storage layout documentation many bytes sources","date":"2021-09-02","description":null,"permalink":"https://s0merset7.github.io/posts/program_interaction/programinteraction/","tags":["pwn.college"],"title":"Program Interaction (Module 1)"},{"content":"main margin 90px auto padding 15px max-width 70% one feature of semgrep is ability use regular expressions regex your rule making previous post we discussed what how it here will be focusing specifically on conjunction as can get complicated setup make sure you have good understanding especially creating own custom yaml rules helpful resources while area test experiment different patterns do so check out either where against code specific datasets upper right hand side even provide explanation why matching certain cases please note that compiler used this site not same uses there may some small discrepancies between platforms template following for basis id name-of-regex-rule pattern-regex regex_pattern_here message write languages [regex] severity severitylevel keep mind only five pattern options learn about other four click example walkthrough trying create match all these secret keys passwordsecret_key0qwertyuiopas passwordsecret_key1\u0026lsquoqwert92iop674\u0026rsquo passwordsecretkey2`qwert92iopd2fr4` passwordsecretkey3qwert92id2fr4 answer questions by end our ready throw into examples character placeholder part has been addressed yet any won\u0026rsquot change iterations if look at each iteration see beginning along middle are present location alphanumeric characters exactly they appear within special must treated differently reserved many almost every also meaning want precede forward slash action very similar words key them however both uppercase lowercase well sometimes separated underscore times around two types variations need introduce new case know but changing vs lower preceded indicate ignore off few when presence changes follow or say doesn\u0026rsquot matter something often limited number could none account parameter simply separate surround like add include range potential finally notice entirely time value itself once identify features values digit numeric 12 15 string common broad catagories 0-9 word underscores whitespace tabs linespaces numbers alphabet individual expected append brings us final detect-secret-keys detected password\\isecret_ikey\\d{1}\\[\u0026quot|'|`][0-9a-za-z]{1215}[\u0026quot|'|`]\\ error summary copy unchanged parts put possibilities sources","date":"2021-07-12","description":null,"permalink":"https://s0merset7.github.io/posts/regex_walkthrough/","tags":["Semgrep"],"title":"Making Regex Rules in Semgrep"},{"content":"main margin 90px auto padding 15px max-width 70% goal of this post is give introduction into how create rules using semgrep as well getting broad overview what tool structure here will be first explore then go examples on use it user interfaceui understand logic finally actually code more complex level table contents basics introductory coding running commandline advanced customizable lightweight static analysis for finding bugs enforcing standards designed security consultants hackers useful because open source free supports many languages python java javascript php there are about you can out box does not require buildable no domain specific language dsl learn make custom patterns match targeting easy any developer expertise assumptions made by developers speed important scans should completed minutes hours days it\u0026rsquos better have false negatives than positives ease prioritize time users they average accessible just professionals every bug design decisions focuses single file localized protocols has that look like makes easier other features compatible regex confirming proper access given files map application routes check weak rsa keys calls runtime objects json generic mode analyse directly supported or text autofix suggest option correct common mistakes software service saas when used large scale interact github jira slack two operators add functionality top whatever programming choose ellipsis operator filler unknown space zero arguments regardless metavariables these capture groups fill variable want prior its assignment value get good tutorial basic test some functionalities visit play playground follow along demos below taking at image we see interface layout left dropdown allowing your rule bar enter block tested results from query show up right hand side identifying function call example find all instances but smart ignore comments string literals while also even varying syntax aliases cross site scripting xss following vulnerable attack inputted being filtered potentially malicious input benefit search chosen so start making copy begin abstract let\u0026rsquos replace anytime general front caps name represent metavariable case parameter similarly passed brings us app.get'...' req res var $var req.query.$param res.write$var which correctly identifies one our vulnerabilities both differences between extra lines functions take care strategic arrows arrow brackets doing saying know exists somewhere expression don\u0026rsquot exactly where .. res.write.. ... business itself seems fine works fundamentally wrong such order methods called lets sometimes need conditionals if presence certain items off method 9-13 return type matter either thing looking above statement replacing function\u0026rsquos argument leaving public $rettype $func.. make_transaction... run result locates everything doesn\u0026rsquot conditional clicking plus button options bottom line new section followed sure verify never transaction place only verified been verify_transaction... returns before exception very last sample flagged vulnerability same fix ellipses verify_transaction$t make_transaction$t version able catch exceptions yaml ui do semgrep\u0026rsquos natural read specifics id name-of-rule pattern $pattern_a message write [languagename] severity severitylevel break down alphanumeric dashes spaces information displayed something often meant help providing context needs changed note pipeline multiple compiled put applies kind issue coded five commands combination another similar boolean expressions brief description each default-pattern-example print.. instance either-pattern-example pattern-either if..... filters ie matches not-pattern-example ..... pattern-not \u0026quot...\u0026quot == $var.. finds filter literal compared allows inside specified means command must based set received inside-pattern-example pattern-inside func $func... print$var narrow least those uses range defined come after previously not-inside-pattern-example pattern-not-inside occur locally installing install mac details installation macs devices environment now installed current directory contains format follows tells flag technically optional giving seconds long wait times timeout without default 30 wish against shared rulesets ability own over 1000 pre-existing vetted company precision accessing pretty simple ruleset list work them depth once you\u0026rsquove selected corner titled seen copied end instructions guide through ~80% you\u0026rsquoll several syntaxes provide showing in-depth explanation looked bitwise regular found specificity different types searches best regex-pattern-example pattern-regex \\d include decimal number not-regex-pattern-example pattern-not-regex instead matching metavariable-regex-example metavariable-regex hello|hi|welcome we\u0026rsquove learned let specify going writing picked would returning includes hello hi welcome statements way searching metavariable-pattern-example if.. $call metavariable-pattern executed provided comparison evaluate metavariable\u0026rsquos numeric metavariable-comparison-example set_value$var 900 less greater avoid issues sources","date":"2021-06-16","description":null,"permalink":"https://s0merset7.github.io/posts/semgrep_intro/semgrepnotes/","tags":["Semgrep"],"title":"Introduction to Semgrep"},{"content":"main margin 90px auto padding 15px max-width 70% note much of below information is summarized from pluralsight course pentration testing ethical hacking kali linux credit goes gus\u0026rsquos expertise check out his blog sources how get started there lot do when it comes website penetration this post by no means comprehensive list everything or than can be done despite not being still content as result have created table contents ordered way that you would naturally progress web pentest help navigate configuring burp suite application firewall scanning identify presence network based protective devices such firewalls intrusion detection systems honeypots load balancing determine if domain uses dns http crawling copy locally scan for management system cms secure sockets layer ssl session tokens test exploiting sql injection maintaining access denial service setting up will need use along some virtual machines vms conduct following tests set them little introduction on follow these instructions proxy allows intercept traffic between internet browser target which often server itself first thing we\u0026rsquore going want open make just normal project all default settings sure we our listening port 8080 using top tabs select options box should titled listeners option next interface 127.0.0.18080 seen picture choose add matching values able connect install add-on firefox recommended called allow us once installed see icon fox right your go ahead click screen like fill same here what does tell send directed through local host 127.0.0.1 used save new now available proxies foxy tab left choice time chances are error saying safe fix problem while steps try pop give message showing has intercepted request example my site forward continue drop delete connection attempt after forwarding back gone process happen any somewhere history at requests sent device also full response into turn off prevent having every but monitor record creating exercises metasploitable operating preconfigured purposes section create own practice skills so machine vm bunch useful features assuming don\u0026rsquot already configured put ip address function link mutillidae webpage running turned map url hand side down where you\u0026rsquoll find may refresh page scope define direct automated spidering occur asks stop resources yes waf wafw00f tool fingerprint considered most accurate purpose detect protected looks fastly lbd bash scrip determines given command run checks protocols effect both shows more about each crawlers verify existing been found well directory file structure particular things via include administration portals configuration files contain hardcoded credentials internal backup copies administrator notes confidential source code webs exist one examples dirbuster owasp-zap vega webscarab webslayer spider i.e crawl whole different forms methods links type parameters external sites references overall layout functions automatically basic its working under dashboard something live passive breakdown hierarchy responses only very am community edition free version advanced upgrade premium httrack verbose mode control+z keep mind take long depending disk space analyses server\u0026rsquos validates certificate weak cypher suites identifies support additional attacks query services order details heartbleed vulnerabilities lists potential start another shut download vmdk prompted passwords accounts then sign root user password brought several addresses listed entering bring plugin wpscan provided case searching enumerating vp output show interesting findings beneath provide exploits fixes certainty enumerate users similar above except instead vulnerable plugins bottom admin account brute force word common know work attack specific preinstalled wordlists usr share why i\u0026rsquom directing path specifying did good job making won\u0026rsquot processing power successful txt made wordpress says valid combinations followed corresponding servers track sessions protocol non-predictable they cannot replicated analysis homepage we\u0026rsquove before clear trick thinking visiting generate token notification requesting look line assigning id looking rest until empty forwarded item sequencer capture button window bar doing generating thousands trying enough large sample size perform statistical entire processor might too ready press pause analyse report starts summary general statement indicating whether random other generated aspects analyzed vulnerability attacker interact backend database sqlmap python automates reconnaissance exploitation multiple types databases change terminal prompt config.inc text editor choosing else changes vim opened replace metasploit name owasp10 exit home owasp 10 a1-injection sqli-extract data info enter anything field remember simple username accessible saved compares seeing runs likely prompts input read you\u0026rsquod selecting results generally reliable tables within exploit since dealing login execute works even managing 16 plaintext usernames successfully plug shell small program provides stealthy backdoor comments facilitate activities weevely popular php pre-installed simulates telnet tester advantage 30 modules tasks browsing transfer auditing compromising reverse tcp shells execution whatever dvwa security level low upload uploading success paste ie me errors uploaded correctly blank white previous entered checked properly commands orbit ion cannon loic floods udp dangerous needs ethically few dependencies you\u0026rsquore monodevelop zip move location unzip newly clicking imma chargin mah lazer please caution websites without their consent illegal happening again end dos","date":"2021-05-31","description":null,"permalink":"https://s0merset7.github.io/posts/website_pentesting/webpentesting/","tags":["Pentesting","Burp Suite"],"title":"Website Penetration Testing"},{"content":"main margin 90px auto padding 15px max-width 70% note much of below information is summarized from pluralsight course pentration testing ethical hacking kali linux credit goes gus\u0026rsquos expertise check out his blog sources how get started external pen process security surrounding systems connected internet this also involves discovery exploitation known unknown vulnerabilities perspective outside attacker traceroute diagnostic tool that allows you view route ip packet takes one host another by running command where domain your choice we can see many steps long it for using reach its destination example be seen take my computer google server address each stop along way as well total time at step perform same function but means want verbose or detailed output 10.10.10.75 live ping after test network sweep against our target look any responses would indicate first thing try use add flag amount packets send keep mind default uses icmp so if has firewall preventing may not response here again am hack box machine sends given results order which they sent size length took transmit summary saying all received 0% loss however when pluralsight.com there 100% no went through meaning either case down these being need more specific requests customization options run help menu going back will three makes those opposed previous specifies port number 80 most websites have their web traffic directed indicates only arrive show similar few details syn us do tests on larger scale are different flags usages nmap very usage recommend own indicating speed level slowest fastest telling trying discover scan instead find hosts simple confirmation up scanning connecting tcp determine what services applications system every 65535 ports allow protocols 124000 people mainly focus application craft special device about mentioned before ways should research explaining examples lets break tells identify active just assume online dns resolution made translating name commonly used 100 them change whatever limits outstanding probes 10 max unreturned changed higher harder handle generated file named formats normal grip xml saw earlier performing open service performed half scanned willing start connection thats does request never actually completed example2 difference replaced changing type ack initiate sending filtered unfiltered specify types allowed map rule settings example3 removes old adds new enables advanced aggressive like operating version scripts present bit longer than others execute looking lot such itself guesses kinds","date":"2021-05-30","description":null,"permalink":"https://s0merset7.github.io/posts/external_pentesting/externalpentesting/","tags":["Pentesting"],"title":"External Pen-Testing"},{"content":"main margin 90px auto padding 15px max-width 70% note much of below information is summarized from pluralsight course pentration testing ethical hacking kali linux credit goes gus\u0026rsquos expertise check out his blog sources how get started this post will be demonstrating some tools processes used during gathering or passive reconnaissance phase pentesting for our purposes defined as use open-sources gain about target you\u0026rsquoll want good place store all your notes you are comes pre-installed application called cherrytree which essentially hierarchial text editor options add pictures graphs more website footer aside basic search make sure focus on content find lots useful management press releases careers offices \u0026amp departments etc seek anything that seems important names contact info sensitive acquisitions technologies physical addresses google database dorks process manipulate function specific results here terms can searches what they do cache url[string] through google\u0026rsquos site retrieving copy second phrase optional but selected any instances provided word filetype [type][string] only files type ex pdf docx xlx where file string looking [string] stores itself intitle pages contain title inurl displays url domain learn many examples found document metadata appended documents so manage them their creation storage owner date time modification network location geolocation metagoofil tool performs identify download target\u0026rsquos extracting usernames software versions server workstation ultimate goal pentester there no like client\u0026rsquos common flags specifies name searching working directory we save indicates saved txt named html_links_timestamp.txt example uses examplesite.com pdfs saves temp theharvester python script popular engines other sites email hosts sub domains identifies searched extract bing etc. also just put specify limit returned limited 100 attempt emails ips case nothing it placeholder whois request return phone numbers ip address dns pay register secure queries followed by long list retrieved identifying who owns particular series fierce run tests given subdomains running deepmagic dmitry command line program written finding host especially its speed removing need enter multiple commands when different simplicity\u0026rsquos sake included specifics each flag general idea runs previous addition new ones at once perform every test including lookups tcp port scans first few created after discover scripts framework quickly conducting automating lot into one have been using previously github project visit start newly must root else not work properly see menu feel free explore however focusing recon section select option then prompt another again provide company scanning scan may take while finished index.html under data domainname upon doing firefox open tabs show got able look yourself happen automatically don\u0026rsquot alarmed if bunch browser opening final tab opened up should summary appear drop down summarize gathered similar recon-ng module based allows variety websites progress install assumes acting user front screen now functions best way exploring own rest showing lets create workspace users conduct without having configure global databases repeatedly choose call mine typing modules organized order normal flow penetration access unique enough entire try brute force description instructions source set my s0merset7.github.io wanted same inside current exit since i\u0026rsquom almost wordlist match normally matches display table along region country fill missing values compare corresponding update specifically geographical locations account most filled condensing findings report html creator customer value has generated finally paste path bar choice something","date":"2021-05-27","description":null,"permalink":"https://s0merset7.github.io/posts/information_gathering/informationgathering/","tags":["Pentesting"],"title":"Information Gathering (Reconnaissance Phase)"},{"content":"main margin 90px auto padding 15px max-width 70% note much of below information is summarized from pluralsight course pentration testing ethical hacking kali linux credit goes gus\u0026rsquos expertise check out his blog sources how get started penetration defined as process assessing security model organization when we perform pentest want make sure not only do proper research but also ensure that are conducting properly within bounds client\u0026rsquos needs well making protect ourselves such here checklist follow prior any pesntest gather about client before stating you need company will be tested order have in-depth understanding should include foundation objectives products employee stakeholder business partners clients visit premises physically basic facilities like parking areas restaurants restrooms elevators etc don\u0026rsquot forget pay close attention network equipment there sufficient server room if different list contact details key personnel info important people who immediately case emergency best way them name department role mobile office number email identify space location inspect area where pentesting team work test person it along easy restroom access restricted other general employees obtain temporary identification cards for ask create domain accounts must made both limited administrator allow completion internal tests previous reports this understand past problems your solutions held up reputation testers timeline last completed compliance requirements physical safeguards active guards mechanisms technical standards servers os devices hire lawyer someone understands technology able legal documents created verified relating prepare document normally provided by reviewed closely their related legality project scope nondisclosure agreementnda aka confidential disclosure agreement prepared sensitive data preventing talking selected liability insurance local agency makes protected sues damages caused allocate budget purpose estimate overall expenses required travel lodging food time scale relation pentester accommodating negatively affect daily hourly fees negotiation fee clearly established negotiated beginning fo estimating long take start milestones date estimated draft cost quote services discuss workflow given which give approval signature provide outline what plan including steps kind done ex denial service tools software special final report ok structure chronological carried results vulnerabilities ranked according importance recommendations counter measures","date":"2021-05-16","description":null,"permalink":"https://s0merset7.github.io/posts/pentesting_checklist/","tags":["Pentesting"],"title":"Pre-Pentration Test Checklist"},{"content":"main margin 90px auto padding 15px max-width 70% there are hundreds of websites out useful information helpful tools that can be used while hacking so decided create list for different aspects as come along them will make sure update this across more check back regularly gathering dns reconnaissance active hopefully you know one already but use find common vulnerability exploits cve how replicate website pentesting simple site lists all possible http status codes what they mean some specific interpret from decrypting password attacks gives current top 50 most passwords privilege escalation walks through do enumeration on new host intention cheat sheet provides code deploy reverse shell process languages reporting","date":"2021-05-16","description":null,"permalink":"https://s0merset7.github.io/posts/useful_sites/","tags":null,"title":"Useful Websites"},{"content":"main margin 90px auto padding 15px max-width 70% note much of below information is summarized from pluralsight course pentration testing ethical hacking kali linux credit goes gus\u0026rsquos expertise check out his blog sources how get started there are two ways which you can set up either create virtual machine vm install operating system os or single dual boot your computer have both 100% free while options may seem bit daunting newcomers plenty great tutorials available online option what do once you\u0026rsquove installed updating normally doesn\u0026rsquot update so we make simple script that does everything for us when run it sudo apt-get \u0026amp\u0026amp upgrade -y dist-upgrade this first retrieve any new updates existing systems follows through upgrading them then upgrades distributions along all packets their dependencies flag automatically answers yes pop questions save time copy paste above code into file give executable permissions by running terminal where name created simply stored don\u0026rsquot forget often useful tools many come preinstalled however be very helpful include on listed couple followed command needed tool these commands assume acting as root user if error message saying not add beginning enter password prompt feel corresponding links more usage each preload identifies users most commonly used applications preloads binaries memory provide faster access bleachbit frees disk space improves privacy freeing cache deleting cookies cleaning internet history shredding temporary files logs discarding other unnecessary advanced features prevent recovery wiping hide traces than been fully deleted manager application executes during process slows impact usable performance will disable services enabled gnome-do package allows execute keyboard apt line search within packages packaging list contents without installing fetching scrub secure deletion program complies government standards figlet customize console adding ascii design given word phrase top opened use open .bashrc home directory .zshrc depending uses bash zsh text editor choice scroll bottom type close instances reopen should see at configuring ssh comes default key pairs generally safer keys pair security\u0026rsquos sake following cd etc mkdir keys_backup_ssh mv ssh_host_* dpkg-reconfigure openssh-server navigate exist creates store current just backup move items who\u0026rsquos starts ssh_host newly made finally last generates using tor need edit our proxy chains configuration proxychains.conf dictates number order proxies way network config located since always chance servers down experiencing lot traffic keep setting requiring strict chain exact must request fail instead want dynamic allow work even isn\u0026rsquot working perfectly comment says uncomment socks5 scrolling sure confirming active confirmed visit website browser here chose firefox replace whatever but ip address now different location done turn off service","date":"2021-05-14","description":null,"permalink":"https://s0merset7.github.io/posts/kali_setup/kali_setup/","tags":["Kali Linux Help"],"title":"Kali Linux Setup and Customization"},{"content":"main margin 90px auto padding 15px max-width 70% new terminal window run adds on default scripts be which include things like speed usefulness intrusiveness you can check them out more detail by looking under script categories section probe open ports determine service version info it looks we only have one port 8080 it\u0026rsquos running called apache tomcat coyote jsp engine 1.1 if do little research find few is being that or for short provides web-server environment actually go website see let\u0026rsquos going this url works because know from portscan http so add at beginning followed htb ip address then \u0026quot8080 allows us specify number all of together say want 10.10.10.95 via connection once get there explore around most clickable options redirect help pages how use exception server status manager app host click any those three pop-up asking credentials don\u0026rsquot before trying set up complicated password breaking attacks good idea try least basics some these adminadmin adminpassword adminpass etc where admin stands administrator hopes log into account privileges feature end page has bunch information about particular unfortunately aside telling bit doesn\u0026rsquot closer finding vulnerability lets back different option something useful however 403 error message may also gotten similar 401 earlier had clicked cancel exited username prompt result thinking are attempting access without giving when exit login logged but very interesting though read gives instructions example tomcats3cret now what often happens people will follow exactly same way might changing user remember change able sign our first need retry as probably noticed show messages instead fix preferences privacy \u0026amp security history clear should far erase your delete everything reason every time attempt takes encodes puts what\u0026rsquos header matches proper allow content match react browsers save recent headers websites clearing again we\u0026rsquove done we\u0026rsquoll war file deploy we\u0026rsquore look chances ability upload make even web application resource zip sense collection other files compressed unlike comprised solely start write own tools already written using program msfvenom payload generator metasploit since java list payloads produce many reduce results pipelining through filters shows ones word taking narrow down figuring else reverse shell understand why tcp determined leaves jsp_shell_reverse_tcp create that\u0026rsquos big command lot fill-in-the-blanks break calls indicates setting local replacing yourhtbip hack box found tab signed used format replace aname whatever name you\u0026rsquoll after moments saying size type ahead clicking browse did right sorted alphabetically preexisting anything learned relies listener device victim connect specifies four listen incoming traffic verbose give details process no dns lookups required saves makes simpler specific listening put response showing ready activate commands they concern replaces replaced navigate users desktop flags price 1.txt root hashes enter points resources 78 97 39 77 104 111 105 67 98 32 116 102 99 119 107 110 115 82 65 72 114 126 43 112 113 127 100","date":"2020-08-23","description":null,"permalink":"https://s0merset7.github.io/posts/jerry_machine/","tags":["HacktheBox","Walkthrough"],"title":"Walkthrough of Jerry Machine – Hack the Box"},{"content":"main margin 90px auto padding 15px max-width 70% new terminal window run another option is open zenmap port scan on same ip see just information ports you can go hosts tab program that does really good job at visualizing breaking down commands into digestible bites now there lot of different ways use being i\u0026rsquom still learning are going be seeing versions but will do my best explain what each version two used here got from other tutorials show levels detail when scanning first we probes determine service info enable os detection fast mode scans fewer than default limit most likely second as seen script traceroute increase verbosity level how detailed process results you’ll find available services running them 21 22 139 445 shows vsftpd 2.3.4 let’s check if any known vulnerabilities command this search for returns name location exploit kali you\u0026rsquoll one vulnerability backdoor execution try metasploit very nifty software has bunch cve exploits saved automatically options fourth our copy address type we\u0026rsquoll need set rhosts desired again then its tell metalsploit where direct after little bit get message saying “exploit completed no session created” meaning attempted didn’t' work some let\u0026rsquos continue samba which know we\u0026rsquore want focus result \u0026quot\u0026lsquousername map script\u0026rsquo execution\u0026quot more time scroll through 15 username look settings change chances unless it up before ran section have lhost lport natural not because htb gives us own local vpn yours access website should messages few seconds says “command shell opened” kind privileges turns out already root user all password hashes under user.txt root.txt either digging around files directories or nameoffile replaced return file whatever put place machines often store named once locations fileaddress take those submit your account points resources 075 108 097 106 112 099 032 083 098 117 104 068 115 116 090 118 121 122","date":"2020-08-23","description":null,"permalink":"https://s0merset7.github.io/posts/lame_machine/","tags":["HacktheBox","Walkthrough"],"title":"Walkthrough of Lame Machine – Hack the Box"},{"content":"main margin 90px auto padding 15px max-width 70% hello welcome my walkthroughs for hack box htb i\u0026rsquove challenged myself completing 50 machines learn hacking tools skills that will prepare me career field being am beginner at time of writing this won\u0026rsquot be able solve any machine without guidance first so plan is as follows 10 do help other write-ups tutorials attach links resources use bottom each goal here basic used pentesting next 15 attempt little from have them open available but only clues what should research get step practice problem solving methodology direct final 25 or giving more realistic feel how tests may table contents intro set up disclaimer lame walkthrough jerry using kali linux many its complete unless you want dual boot reset os your computer would recommend following it on own device it\u0026rsquos totally free has plenty documentation if come across issue isn\u0026rsquot link also boxes make sure mention programs software find go applications tab top left window there dropdown all offers some extra hep setup personalization check out post need subscribe vip member about $13 month access retired well bunch features i\u0026rsquom still exploring after signing bit confusing vpn challenges show you\u0026rsquoll figure invite code yourself said such very good chance explain things wrong take longer roundabout way than necessary best back edit past mistakes catch anything better method contact let know rm9yihrozsbrzxkgdg8gdghlig90agvycywgzmluzcb0agugbwvhbmluzybvzibtesbuyw1l","date":"2020-08-23","description":null,"permalink":"https://s0merset7.github.io/posts/intro/","tags":["HacktheBox","Kali Linux Help"],"title":"Hack the Box Walkthroughs Intro"}]